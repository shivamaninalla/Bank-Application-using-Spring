package com.monocept.app.controller;

import java.util.List;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.monocept.app.entity.Courses;
import com.monocept.app.entity.Students;
import com.monocept.app.service.StudentService;

@RestController
@RequestMapping("api/")
public class StudentCourseController {
	
	private StudentService studentService;

	public StudentCourseController(StudentService studentService) {
		super();
		this.studentService = studentService;
	}
	
	
	@GetMapping()
	public List<Students> getAllStudents() {
		return studentService.getAllStudents();
	}
	
	@PostMapping()
	public Students addStudent(@RequestBody Students student) {
		return studentService.addStudent(student);
	}
	
	@GetMapping("{id}")
	public Students getStudentById(@PathVariable(name = "id") int id) {
		return studentService.getStudentById(id);
	}
	
	
	@DeleteMapping("{id}")
	public void deleteStudentById(@PathVariable(name = "id") int id) {
		studentService.deleteStudentById(id);
	}
	
	
	
	@GetMapping("courses")
	public List<Courses> getAllCourses() {
		return studentService.getAllCourses();
	}
	
	@PostMapping("courses")
	public Courses addCourse(@RequestBody Courses course) {
		return studentService.addCourse(course);
	}
	
	@GetMapping("/courses/{id}")
	public Courses getCourseById(@PathVariable(name = "id") int id) {
		return studentService.getCourseById(id);
	}
	
	
	
	@DeleteMapping("courses/{id}")
	public void deleteCourseById(@PathVariable(name = "id") int id) {
		studentService.deleteCourseById(id);
	}
	
	
	
	@PostMapping("{student_id}/courses/course_id")
			 public Courses addStudentToCourse(@PathVariable(name = "student_id") int student_id,
						@PathVariable(name = "course_id") int course_id) {
		
		return studentService.addStudentToCourse(student_id,course_id);

		
	}
			
	

}
