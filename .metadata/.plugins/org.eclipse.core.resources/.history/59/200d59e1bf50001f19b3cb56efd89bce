package com.monocept.app.service;

import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.monocept.app.entity.Instructor;
import com.monocept.app.repository.CourseRepository;
import com.monocept.app.repository.InstructorRepository;

@Service
public class InstructorServiceImpl implements InstructorService{

	private InstructorRepository instructorRepository;
	private CourseRepository courseRepository;
	
	
	public InstructorServiceImpl(InstructorRepository instructorRepository, CourseRepository courseRepository) {
		super();
		this.instructorRepository = instructorRepository;
		this.courseRepository = courseRepository;
	}


	@Override
	public List<Instructor> getAllInstructors() {
		
		return instructorRepository.findAll();
	}


	@Override
	public Instructor saveInstructor(Instructor instructor) {
		
		return instructorRepository.save(instructor);
	}


	@Override
	public Instructor updateInstructor(Instructor instructor) {
		
		Instructor employeeById = findInstructorById(instructor.getId());
		if(employeeById!=null) {
			return instructorRepository.save(instructor);
		}
		return null;
	}


	@Override
	public Instructor findInstructorById(int id) {
		
		Optional<Instructor> byId = instructorRepository.findById(id);
		if(byId.isPresent()) {
			return byId.get();
		}
		return null;
	}

}
