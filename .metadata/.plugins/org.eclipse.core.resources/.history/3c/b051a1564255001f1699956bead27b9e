package com.techlabs.app.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.techlabs.app.dto.CustomerRequestDTO;
import com.techlabs.app.dto.CustomerResponseDTO;
import com.techlabs.app.service.BankService;

@RestController
@RequestMapping("/api/auth/customer")

public class BankController {
	BankService bankService;
	
	
	
	public BankController(BankService bankService) {
		super();
		this.bankService = bankService;
	}



	@GetMapping
	@PreAuthorize("hasRole('ADMIN')")
	public ResponseEntity<List<CustomerResponseDTO>> getAllCustomers(){
		List <CustomerResponseDTO> customer=bankService.getAllCustomers();
		return new ResponseEntity<List<CustomerResponseDTO>>(customer,HttpStatus.ACCEPTED);
	}
	
	@PostMapping
	@PreAuthorize("hasRole('ADMIN')")
	public ResponseEntity <CustomerResponseDTO> addCustomer(@RequestBody CustomerRequestDTO customerrequestdto) {
	 return new ResponseEntity<CustomerResponseDTO>(bankService.addCustomer(customerrequestdto),HttpStatus.ACCEPTED);
	}
	
	@DeleteMapping("/{id}")
	@PreAuthorize("hasRole('ADMIN')")
	public  ResponseEntity<String>deleteCustomerById(@PathVariable(name="id") long id){
		String message=bankService.deleteCustomerById(id);
		  return new ResponseEntity<String>(message,HttpStatus.OK);
	}
	
	@GetMapping("/{id}")
	@PreAuthorize("hasRole('ADMIN')")
	 public ResponseEntity <CustomerResponseDTO> findCustomerbyId(@PathVariable(name="id") long id){
		return new ResponseEntity <CustomerResponseDTO>(bankService.findCustomerByid(id),HttpStatus.OK);
	}
	
	
	@PostMapping("{cid}/account/{bid}")
	public ResponseEntity<CustomerResponseDTO> addAccount(@PathVariable(name="cid")long cid ,@PathVariable(name="bid") int bid){
		return new ResponseEntity<CustomerResponseDTO>(bankService.addAccount(cid,bid),HttpStatus.OK);
	}
	
	

}
